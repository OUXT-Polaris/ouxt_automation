name: Publish ROS2 CI Base Image

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *
  push:
    branches:
      - master
  release:
    types: [published]
jobs:
  ros2:
    name: Publish the Basic Image
    runs-on: ubuntu-20.04
    timeout-minutes: 40
    strategy:
      matrix:
        rosdistro: [foxy, galactic]
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        if: ${{ github.event_name != 'pull_request'}}
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./docker/ci-base
          file: ./docker/ci-base/Dockerfile.${{ matrix.rosdistro }}
          tags: wamvtan/ros2-ci-base:${{ matrix.rosdistro }}
          no-cache: true
          push: true
  perception-jetson:
    name: Publish the Basic Image
    runs-on: ubuntu-20.04
    timeout-minutes: 40
    strategy:
      matrix:
        dockerfile: [[Dockerfile, galactic-ros-base-l4t-r32.6], [Dockerfile.trt801, galactic-ros-base-l4t-r32.6-trt]]
    steps:
      - uses: actions/checkout@v2
      - name: Setup QEMU user-mode emulation
        uses: docker/setup-qemu-action@v1
      - name: Login to Docker Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        if: ${{ github.event_name != 'pull_request'}}
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./docker/l4t-ros2-base
          file: ./docker/l4t-ros2-base/${{ matrix.dockerfile[0] }}
          tags: wamvtan/ros:${{ matrix.dockerfile[1] }}
          platforms: linux/arm64/v8
          no-cache: true
          push: true
