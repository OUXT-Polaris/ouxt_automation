name: scenario_test

on:
  schedule:
  - cron: 0 0 * * *
  pull_request:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  export_repos:
    name: export_repos
    runs-on: ubuntu-20.04
    steps:
      - name: basic install
        run: |
            sudo apt install make ansible
      - name: ansible version
        run: |
              ansible-playbook --version
      - uses: actions/checkout@v2-beta
      - name: ansible
        run: |
            ansible-playbook -i ansible/hosts/localhost.ini ansible/export_repos.yml --connection local --become -e ansible_user=ubuntu
      - uses: actions/upload-artifact@v2
        with:
          name: packages
          path: ansible/packages.repos
      - name: Extract branch name
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME={echo ${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV
        id: extract_branch
      # extract branch name on pull request
      - name: Print branch name
        if: github.event_name == 'pull_request'
        run: echo "{BRANCH_NAME}=${GITHUB_HEAD_REF}" >> $GITHUB_ENV
      # print branch name
      - name: Get branch name
        run: echo 'The branch name is' $BRANCH_NAME
      - name: make workspace directory
        run: mkdir workspace
      - name: Checkout workspace repo
        uses: actions/checkout@v2
        with:
          repository: OUXT-Polaris/robotx_workspace
          path: workspace
      - name: delete .git files in workspace
        run: |
          find -name robotx_ws/*.git | xargs -I {} rm -rf {}
      - name: checkout to target branch
        run: |
          git checkout ${BRANCH_NAME}
        working-directory: workspace
      - name: copy to workspace
        run: |
          cp -r robotx_ws/src/* workspace
      - name: commit changes
        run: |
          git config --local user.email "ouxt.share@gmail.com"
          git config --local user.name "wam-v-tan"
          git add --all
          git commit -m "Add changes" -a
        working-directory: workspace
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.WAMV_TAN_BOT_SECRET }}
          branch: ${BRANCH_NAME}
          repository: OUXT-Polaris/robotx_workspace
          directory: workspace
  run_scenario_test:
    if: ${{ github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    needs: export_repos
    outputs:
      git_branch: ${{github.head_ref}}
      image_tag: ${{ steps.findandreplace.outputs.value }}
    steps:
    - uses: actions/checkout@v2-beta
    - name: Run ros integration test action
      uses: OUXT-Polaris/ros-integration-test-action@0.0.9
      with:
        base_image: hakuturu583/robotx_scenario_test
        tag: master
        rosdistro: foxy
        test_command: ros2 launch navi_sim with_planner.launch.py
        check_result_command: ros2 run navi_sim check_result
        artifact_name: scenario_test_result
        repos_artifact_name: packages
        repos_filename: packages.repos
        lcov_artifacts_name: lcov
      env:
        ACTIONS_RUNTIME_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        ACTIONS_RUNTIME_URL: ${{ env.ACTIONS_RUNTIME_URL }}
        GITHUB_RUN_ID: ${env.GITHUB_RUN_ID}
        GITHUB_CLONE_TOKEN: ${{ secrets.WAMV_TAN_BOT_SECRET }} # access token for cloning your package in private repository.
        GITHUB_CLONE_USERNAME: wam-v-tan # username of access token
  push_to_codecov:
    runs-on: ubuntu-latest
    needs: run_scenario_test
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: lcov
        path: lcov
    - name: publish codecov result
      uses: codecov/codecov-action@v1.2.1
      if: always()
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # only needed for private repos
        files: /home/runner/work/robotx_setup/robotx_setup/lcov
        flags: scenario_test
        name: robotx_setup
  build_base_docker_image:
    if: ${{ github.event_name != 'pull_request'}}
    runs-on: ubuntu-latest
    needs: export_repos
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: packages
        path: docker/scenario_test/
    - uses: actions/checkout@v2-beta
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        username: hakuturu583
        password: ${{ secrets.DOCKERHUB_SECRET }}
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      env:
        DOCKER_BUILDKIT: 1
      with:
        tags: hakuturu583/robotx_scenario_test:master
        context: docker/scenario_test
        build_args: BUILDKIT_INLINE_CACHE=1
        push: true
        file: docker/scenario_test/Dockerfile