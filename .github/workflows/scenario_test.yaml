name: scenario_test

on:
  schedule:
  - cron: 0 0 * * *
  pull_request:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  export_repos:
    name: export_repos
    runs-on: ubuntu-20.04
    steps:
      - name: basic install
        run: |
            sudo apt install make ansible
      - name: ansible version
        run: |
              ansible-playbook --version
      - uses: actions/checkout@v2-beta
      - name: ansible
        run: |
            ansible-playbook -i ansible/hosts/localhost.ini ansible/export_repos.yml --connection local --become -e ansible_user=ubuntu
      - uses: actions/upload-artifact@v2
        with:
          name: packages.repos
          path: ansible/packages.repos
  build_scenario_test_image_for_pull_request:
    if: ${{ github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    needs: export_repos
    outputs:
      git_branch: ${{github.head_ref}}
      image_tag: ${{ steps.findandreplace.outputs.value }}
    steps:
    - uses: actions/checkout@v2-beta
    - uses: actions/download-artifact@v2
      with:
        name: packages.repos
        path: docker/scenario_test
    - name: check repos file
      run: cat /home/runner/work/robotx_setup/robotx_setup/docker/scenario_test/packages.repos
    - uses: mad9000/actions-find-and-replace-string@2
      with:
        source: ${{github.head_ref}}
        find: '/'
        replace: '_'
      id: findandreplace
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        username: hakuturu583
        password: ${{ secrets.DOCKERHUB_SECRET }}
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      env:
        DOCKER_BUILDKIT: 1
      with:
        tags: hakuturu583/robotx_scenario_test:${{ steps.findandreplace.outputs.value }}
        context: docker/scenario_test
        build_args: BUILDKIT_INLINE_CACHE=1
        push: true
        file: docker/scenario_test/Dockerfile
  build_scenario_test_image:
    if: ${{ github.event_name != 'pull_request'}}
    runs-on: ubuntu-latest
    needs: export_repos
    outputs:
      git_branch: ${{ steps.tag.outputs.branch }}
      image_tag: ${{ steps.findandreplace.outputs.value }}
    steps:
    - uses: actions/checkout@v2-beta
    - uses: actions/download-artifact@v2
      with:
        name: packages.repos
        path: docker/scenario_test
    - name: check repos file
      run: cat /home/runner/work/robotx_setup/robotx_setup/docker/scenario_test/packages.repos
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: tag
    - uses: mad9000/actions-find-and-replace-string@2
      with:
        source: "${{ steps.tag.outputs.branch }}"
        find: '/'
        replace: '_'
      id: findandreplace
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        username: hakuturu583
        password: ${{ secrets.DOCKERHUB_SECRET }}
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      env:
        DOCKER_BUILDKIT: 1
      with:
        tags: hakuturu583/robotx_scenario_test:${{ steps.findandreplace.outputs.value }}
        context: docker/scenario_test
        build_args: BUILDKIT_INLINE_CACHE=1
        push: true
        file: docker/scenario_test/Dockerfile