name: "Build L4T OpenCV image action"
description: "Build L4T OpenCV docker images"

inputs:
  docker_username:
    description: "Username for Dockerhub"
    required: true
  docker_password:
    description: "Password for Dockerhub"
    required: true
  opencv_version:
    description: "Version of opencv you want to use"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Setup QEMU user-mode emulation
      uses: docker/setup-qemu-action@v1
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}
    - name: Build and Push Docker Image
      if: ${{ github.event_name != 'pull_request'}}
      uses: docker/build-push-action@v2
      env:
        DOCKER_BUILDKIT: 1
      with:
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}
        context: ./.github/workflows/docker/l4t_opencv
        file: ./.github/workflows/docker/l4t_opencv/Dockerfile
        tags: wamvtan/l4t_opencv:${{ inputs.opencv_version }}
        build-args: |
          OPENCV_VERSION=${{ inputs.opencv_version }}
        platforms: linux/arm64/v8
        no-cache: false
        cache-from: type=registry,ref=wamvtan/l4t_opencv:${{ inputs.opencv_version }}-buildcache
        cache-to: type=registry,ref=wamvtan/l4t_opencv:${{ inputs.opencv_version }}-buildcache,mode=max
        push: true
    - name: Build Docker Image
      if: ${{ github.event_name == 'pull_request'}}
      uses: docker/build-push-action@v2
      env:
        DOCKER_BUILDKIT: 1
      with:
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}
        context: ./.github/workflows/docker/l4t_opencv
        file: ./.github/workflows/docker/l4t_opencv/Dockerfile
        tags: wamvtan/l4t_opencv:${{ inputs.opencv_version }}
        build-args: |
          OPENCV_VERSION=${{ inputs.opencv_version }}
        platforms: linux/arm64/v8
        no-cache: false
        cache-from: type=registry,ref=wamvtan/l4t_opencv:${{ inputs.opencv_version }}-buildcache
        push: false