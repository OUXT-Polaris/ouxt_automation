name: build_and_push_docker

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *
  push:
    branches:
      - master
  pull_request:
    paths:
      - "docker/**"
      - ".github/workflows/docker/**"
      - ".github/workflows/docker_push.yaml"
  release:
    types: [published]
jobs:
  l4t_opencv:
    name: build and push wamvtan/l4t_opencv
    runs-on: ubuntu-20.04
    timeout-minutes: 360
    strategy:
      matrix:
        opencv_version: ["4.4.0", "4.5.0"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Setup QEMU user-mode emulation
        uses: docker/setup-qemu-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        if: ${{ github.event_name != 'pull_request'}}
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./.github/workflows/docker/l4t_opencv
          file: ./.github/workflows/docker/l4t_opencv/Dockerfile
          tags: wamvtan/l4t_opencv:${{ matrix.opencv_version }}
          build-args: |
            OPENCV_VERSION=${{ matrix.OPENCV_VERSION }}
          platforms: linux/arm64/v8
          no-cache: false
          cache-from: type=registry,ref=wamvtan/l4t_opencv:${{ matrix.opencv_version }}-buildcache
          cache-to: type=registry,ref=wamvtan/l4t_opencv:${{ matrix.opencv_version }}-buildcache,mode=max
          push: true
      - name: Build Docker Image
        if: ${{ github.event_name == 'pull_request'}}
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./.github/workflows/docker/l4t_opencv
          file: ./.github/workflows/docker/l4t_opencv/Dockerfile
          tags: wamvtan/l4t_opencv:${{ matrix.opencv_version }}
          build-args: |
            OPENCV_VERSION=${{ matrix.OPENCV_VERSION }}
          platforms: linux/arm64/v8
          no-cache: false
          cache-from: type=registry,ref=wamvtan/l4t_opencv:${{ matrix.opencv_version }}-buildcache
          push: false
  dev_container:
    name: build and push wamvtan/dev_container
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        if: ${{ github.event_name != 'pull_request'}}
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./.github/workflows/docker/dev_container
          file: ./.github/workflows/docker/dev_container/Dockerfile
          tags: wamvtan/dev_container:latest
          no-cache: true
          # cache-from: type=registry,ref=wamvtan/dev_container:buildcache
          # cache-to: type=registry,ref=wamvtan/dev_container:buildcache,mode=max
          push: true
      - name: Build Docker Image
        if: ${{ github.event_name == 'pull_request'}}
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./.github/workflows/docker/dev_container
          file: ./.github/workflows/docker/dev_container/Dockerfile
          tags: wamvtan/dev_container:latest
          no-cache: true
          # cache-from: type=registry,ref=wamvtan/dev_container:buildcache
          push: false
  yolox:
    name: build and push wamvtan/yolox
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        if: ${{ github.event_name != 'pull_request'}}
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./.github/workflows/docker/yolox
          file: ./.github/workflows/docker/yolox/Dockerfile
          tags: wamvtan/yolox:latest
          no-cache: false
          cache-from: type=registry,ref=wamvtan/yolox:buildcache
          cache-to: type=registry,ref=wamvtan/yolox:buildcache,mode=max
          push: true
      - name: Build Docker Image
        if: ${{ github.event_name == 'pull_request'}}
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./.github/workflows/docker/yolox
          file: ./.github/workflows/docker/yolox/Dockerfile
          tags: wamvtan/yolox:latest
          no-cache: false
          cache-from: type=registry,ref=wamvtan/yolox:buildcache
          push: false
  yolox_trainer:
    name: build and push wamvtan/yolox_trainer
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    needs: yolox
    strategy:
      matrix:
        os: [linux-x64]
        runner_version: [2.295.0]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        if: ${{ github.event_name != 'pull_request'}}
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./.github/workflows/docker/yolox_trainer
          file: ./.github/workflows/docker/yolox_trainer/Dockerfile
          tags: wamvtan/yolox_trainer:latest
          build-args: |
            "os=${{ matrix.os }}"
            "runner_version=${{ matrix.runner_version }}"
          no-cache: false
          cache-from: type=registry,ref=wamvtan/yolox_trainer:buildcache
          cache-to: type=registry,ref=wamvtan/yolox_trainer:buildcache,mode=max
          push: true
      - name: Build Docker Image
        if: ${{ github.event_name == 'pull_request'}}
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./.github/workflows/docker/yolox_trainer
          file: ./.github/workflows/docker/yolox_trainer/Dockerfile
          tags: wamvtan/yolox_trainer:latest
          build-args: |
            "os=${{ matrix.os }}"
            "runner_version=${{ matrix.runner_version }}"
          no-cache: false
          cache-from: type=registry,ref=wamvtan/yolox_trainer:buildcache
          push: false
  debian_package_builder:
    name: build and push wamvtan/debian_package_builder image
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    strategy:
      matrix:
        rosdistro: [foxy, galactic, humble]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        if: ${{ github.event_name != 'pull_request'}}
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./.github/workflows/docker/debian_package_builder
          file: ./.github/workflows/docker/debian_package_builder/Dockerfile
          tags: wamvtan/debian_package_builder:${{ matrix.rosdistro }}
          build-args: |
            ROS_DISTRO=${{ matrix.rosdistro }}
          no-cache: false
          cache-from: type=registry,ref=wamvtan/debian_package_builder:${{ matrix.rosdistro }}-buildcache
          cache-to: type=registry,ref=wamvtan/debian_package_builder:${{ matrix.rosdistro }}-buildcache,mode=max
          push: true
      - name: Build Docker Image
        if: ${{ github.event_name == 'pull_request'}}
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./.github/workflows/docker/debian_package_builder
          file: ./.github/workflows/docker/debian_package_builder/Dockerfile
          tags: wamvtan/debian_package_builder:${{ matrix.rosdistro }}
          build-args: |
            ROS_DISTRO=${{ matrix.rosdistro }}
          no-cache: false
          cache-from: type=registry,ref=wamvtan/debian_package_builder:${{ matrix.rosdistro }}-buildcache
          push: false
  vrx:
    name: build and push wamvtan/vrx
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        if: ${{ github.event_name != 'pull_request'}}
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./.github/workflows/docker/vrx
          file: ./.github/workflows/docker/vrx/Dockerfile
          tags: wamvtan/vrx:latest
          no-cache: false
          cache-from: type=registry,ref=wamvtan/vrx:buildcache
          cache-to: type=registry,ref=wamvtan/vrx:buildcache,mode=max
          push: true
      - name: Build Docker Image
        if: ${{ github.event_name == 'pull_request'}}
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          context: ./.github/workflows/docker/vrx
          file: ./.github/workflows/docker/vrx/Dockerfile
          tags: wamvtan/vrx:latest
          no-cache: false
          cache-from: type=registry,ref=wamvtan/vrx:buildcache
          push: false
