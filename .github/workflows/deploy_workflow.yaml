name: deploy_workflow

on:
  schedule:
  - cron: 0 0 * * *
  workflow_dispatch:
  push:
    branches:
      - "master"
    paths:
      - ./workflow_templates/**
      - ./.github/workflows/deploy_workflow.yaml

jobs:
  get_template:
    runs-on: ubuntu-20.04
    steps:  
      - uses: actions/checkout@v2-beta
      - uses: actions/upload-artifact@v2
        with:
          name: templates
          path: ./workflow_templates/*.yaml
  deploy_workflow:
    needs: get_template
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        package_name: [
          behavior_tree_action_builder,
          color_names,
          data_buffer,
          dynamixel_hardware_interface,
          geographic_conversion,
          geographic_info,
          geometry_msgs_data_buffer,
          hermite_path_planner,
          image_processing_utils,
          joy_to_twist,
          lua_vendor,
          message_synchronizer,
          miniv_control,
          miniv_description,
          navi_sim,
          nmea_gps_driver,
          nmea_to_geopose,
          odom_frame_publisher,
          ouxt_common,
          pcl_apps,
          perception_bringup,
          playstation_controller_drivers,
          quaternion_operation,
          realsense_hardware_interface,
          robotx_behavior_tree,
          robotx_bt_planner,
          robotx_ekf,
          scan_segmentation,
          sol_vendor,
          tcp_sender,
          unisim_ros2_control,
          usv_controller,
        ]
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: templates
        path: ~/templates
    - uses: actions/checkout@v2
      with:
        repository: OUXT-Polaris/${{ matrix.package_name }}
        token: ${{ secrets.WAMV_TAN_BOT_SECRET }}
    - name: Deploy build test workflow
      uses: OUXT-Polaris/setup-workflow-action@0.0.1
      with:
        template: /home/runner/templates/BuildTest.yaml
        project_path: ./
        parameters: "{ \"rosdistro\" : \"foxy,galactic\" }"
    - name: Deploy release workflow
      uses: OUXT-Polaris/setup-workflow-action@0.0.1
      with:
        template: /home/runner/templates/Release.yaml
        project_path: ./
        parameters: "{}"
    - name: Check branch exist
      id: check_branch
      run: |
        echo "::set-output name=exist::$(git ls-remote --heads https://github.com/${{ matrix.package_name }}.git workflow/sync | wc -l)"
    - name: Count changes
      id: changes
      run: |
        git add -N .
        echo "::set-output name=count::$(git diff --name-only | wc -l)"
    - name: Check default branch
      id: check_default_branch
      run: |
        echo "::set-output name=default_branch::$(git remote show origin | sed -n '/HEAD branch/s/.*: //p')"
    - uses: peter-evans/create-pull-request@v3
      id: create_pull_request
      if: steps.check_branch.outputs.exist == 0 && steps.changes.outputs.count > 0
      with:
        token: ${{ secrets.WAMV_TAN_BOT_SECRET }}
        commit-message: Setup workflow
        committer: wam-v-tan <ouxt.share@gmail.com>
        author: wam-v-tan <ouxt.share@gmail.com>
        signoff: false
        branch: workflow/sync
        base: ${{ steps.check_default_branch.outputs.default_branch }}
        delete-branch: true
        title: '[Bot] Update workflow'
        body: |
          # Description
          Setup Build test workflow  
          # How to check
          Please check passing all CI test.
        labels: |
          bot
        assignees: wam-v-tan
        reviewers: wam-v-tan
        team-reviewers: |
          owners
          maintainers
        draft: false
    - name: Enable Pull Request Automerge
      if: steps.create_pull_request.outputs.pull-request-operation == 'created'
      uses: peter-evans/enable-pull-request-automerge@v1
      with:
        token: ${{ secrets.WAMV_TAN_BOT_SECRET }}
        pull-request-number: ${{ steps.create_pull_request.outputs.pull-request-number }}
        merge-method: squash
        repository: OUXT-Polaris/${{ matrix.package_name }}