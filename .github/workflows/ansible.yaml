name: ansible

on:
  schedule:
  - cron: 0 0 * * *
  pull_request:
    paths:
      - "ansible/**"
  workflow_dispatch:

jobs:
  setup_dev_environment:
    name: setup_dev_environment
    runs-on: ubuntu-20.04
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    - name: basic install
      run: |
          sudo apt install make ansible
    - name: ansible version
      run: |
            ansible-playbook --version
    - uses: actions/checkout@v2-beta
    - name: add password file
      run: |
        echo ${{ secrets.VAULT_PASSWORD }} > password.txt
    - uses: actions/cache@v2
      if: ${{ github.event.label.name != 'clean_build' }}
      with:
        path: robotx_ws
        key: robotx_ws-${{ steps.date.outputs.date }}
    - name: ansible
      run: |
          ansible-playbook -i ansible/hosts/localhost.ini ansible/setup_dev_environment.yml --connection local --become -e ansible_user=ubuntu
    - name: export repos file
      run: vcs export --exact robotx_ws/src > robotx.repos
    - uses: actions/upload-artifact@v2
      with:
        name: robotx.repos
        path: robotx.repos
    - name: Notify Slack
      uses: 8398a7/action-slack@v2
      if: failure()
      with:
        status: ${{ job.status }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
  setup_dev_container:
    name: setup_dev_container
    needs: setup_dev_environment
    runs-on: ubuntu-20.04
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - uses: actions/checkout@v2-beta
      - uses: actions/cache@v2
        if: ${{ github.event.label.name != 'clean_build' }}
        with:
          path: robotx_ws
          key: robotx_ws-${{ steps.date.outputs.date }}
      - name: basic install
        run: |
            sudo apt install make ansible
      - name: ansible version
        run: |
              ansible-playbook --version
      - name: run ansible and install docker
        run: |
            ansible-playbook -i ansible/hosts/localhost.ini ansible/start_dev_container.yml --connection local --become -e ansible_user=ubuntu
      - name: build docker container
        run: |
            ansible-playbook -i ansible/hosts/localhost.ini ansible/setup_dev_environment.yml --connection local --become -e ansible_user=ubuntu
      - name: Notify Slack
        uses: 8398a7/action-slack@v2
        if: failure()
        with:
          status: ${{ job.status }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
  setup_docker_testbench:
    name: setup_docker_testbench
    runs-on: ubuntu-20.04
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    - uses: actions/checkout@v2-beta
    - uses: actions/cache@v2
      if: ${{ github.event.label.name != 'clean_build' }}
      with:
        path: docker/docker_testbench/mount_point/
        key: sd-card-image-${{ steps.date.outputs.date }}
    - name: basic install
      run: |
          sudo apt install make ansible
    - name: ansible version
      run: |
            ansible-playbook --version
    - name: run ansible and install docker
      run: |
          ansible-playbook -i ansible/hosts/localhost.ini ansible/setup_docker_testbench.yml --connection local --become -e ansible_user=ubuntu
    - name: Notify Slack
      uses: 8398a7/action-slack@v2
      if: failure()
      with:
        status: ${{ job.status }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}