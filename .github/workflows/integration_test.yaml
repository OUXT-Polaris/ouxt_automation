name: integration_test

on:
  schedule:
  - cron: 0 0 * * *
  pull_request:
  workflow_dispatch:
    inputs:
      overwrite_package:
        required: false
        default: ''
        description: 'name of the package you want to overwrite'
      commit_hash:
        required: false
        default: ''
        description: 'commit hash of overwrite package'
  push:
    branches: [ master ]

jobs:
  export_repos_full:
    name: export_repos_full
    runs-on: ubuntu-20.04
    steps:
    - name: basic install
      run: |
          sudo apt install make ansible
    - name: ansible version
      run: |
            ansible-playbook --version
    - uses: actions/checkout@v2-beta
    - name: ansible
      run: |
          ansible-playbook -i ansible/hosts/localhost.ini ansible/export_repos_full.yml --connection local --become -e ansible_user=ubuntu
    - uses: OUXT-Polaris/update-repos-action@0.0.1
      with:
        input_repos_file: ansible/packages.repos
        output_repos_file: packages.repos
        package_name: github.event.inputs.overwrite_package
        target_version: github.event.inputs.commit_hash
    - uses: actions/upload-artifact@v2
      with:
        name: packages
        path: packages.repos
  build:
    name: build
    runs-on: ubuntu-20.04
    needs: export_repos_full
    steps:
    - uses: ros-tooling/setup-ros@v0.2
      with:
        required-ros-distributions: foxy
    - name: make workspace
      run: |
        mkdir -p robotx_ws/src
    - uses: actions/download-artifact@v2
      with:
        name: packages
        path: .
    - uses: actions/cache@v2
      id: cache_workspace
      with:
        path: robotx_ws
        key: workspace-${{ hashFiles('packages.repos') }}
    - name: move repos file
      run: |
        mv packages.repos robotx_ws/packages.repos
    - name: install depends packages
      run: |
        vcs import src < packages.repos
        rosdep update
        rosdep install -iry --from-paths src --rosdistro foxy
        sudo apt-get install -y python3-apt python3-pip
        pip3 install -U git+https://github.com/colcon/colcon-bundle git+https://github.com/ros-infrastructure/rosdep
      working-directory: robotx_ws
    - name: build bundle
      run: |
        source /opt/ros/foxy/setup.bash
        export ROS_DISTRO=foxy
        export ROS_VERSION=2
        colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release
      working-directory: robotx_ws
    - uses: actions/upload-artifact@v2
      with:
        name: bundle
        path: robotx_ws/bundle/output.tar
  run_integration_test:
    name: run_integration_test
    runs-on: ubuntu-20.04
    needs: build
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: bundle
        path: bundle
    - name: extract tarbor
      run: |
        tar -xvf bundle/output.tar
        mkdir -p dependencies
        tar -zxvf dependencies.tar.gz -C dependencies/
        mkdir -p workspace
        tar -zxvf workspace.tar.gz -C workspace/
        BUNDLE_CURRENT_PREFIX=$PWD/dependencies source $PWD/dependencies/setup.sh
        BUNDLE_CURRENT_PREFIX=$PWD/workspace source $PWD/workspace/setup.sh
