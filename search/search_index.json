{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"OUXT Polaris Development Automation Tool \u2693\ufe0e Status Badge \u2693\ufe0e Build Test Integration Test Automation What is it \u2693\ufe0e This tool supports to build our software and deploy them into local_machine and real robot. This tool works on ansible and github actions Contents Guide \u2693\ufe0e If you want to know how to setup development in your local machine. See tutorials If you want to see navigation demo in your local machine. See tutorials If you want to know hardware specification. See hardware documenation If you want to know how to CI/CD pipeline works. See automation pipelines documentation","title":"Home"},{"location":"#ouxt-polaris-development-automation-tool","text":"","title":"OUXT Polaris Development Automation Tool"},{"location":"#status-badge","text":"","title":"Status Badge"},{"location":"#what-is-it","text":"This tool supports to build our software and deploy them into local_machine and real robot. This tool works on ansible and github actions","title":"What is it"},{"location":"#contents-guide","text":"","title":"Contents Guide"},{"location":"automation_pipeline/","text":"Automation Pipeline \u2693\ufe0e Repository Architecture \u2693\ufe0e OUXT-Polaris softwares are separeated in many repositories in order to run continuous integration quickly. So, we developing integration pipeline for operating complex software stacks and deploy it. Integration Pipeline \u2693\ufe0e Integration pipeline is deployed at github actions in each repositories. Actions in robotx_setup package \u2693\ufe0e You can see acions tatus here . robotx_setup graph TB pull_request --send -->robotx_setup developer --manual hook-->robotx_setup daily_hook --> robotx_setup linkStyle 0 stroke-width:2px,stroke:blue; linkStyle 1 stroke-width:2px,stroke:blue; linkStyle 2 stroke-width:2px,stroke:blue; click robotx_setup \"https://github.com/OUXT-Polaris/robotx_setup\" \"robotx_setup repository\" robotx_setup workflow runs ansible with setup-full playbook and check the setup tool works well. build_docker graph TB pull_request --send -->robotx_setup developer --manual hook-->robotx_setup daily_hook --> robotx_setup linkStyle 0 stroke-width:2px,stroke:blue; linkStyle 1 stroke-width:2px,stroke:blue; linkStyle 2 stroke-width:2px,stroke:blue; click robotx_setup \"https://github.com/OUXT-Polaris/robotx_setup\" \"robotx_setup repository\" build_docker workflow runs ansible with setup-docker playbook and check the setup tool works well with docker. scenario_test graph TB pull_request --send --> robotx_setup pull_request --merged --> robotx_setup developer --manual hook--> robotx_setup daily_hook --> robotx_setup robotx_setup --push base image--> dockerhub dockerhub -- pull base image --> robotx_setup robotx_setup --generate repos file--> artifact linkStyle 0 stroke-width:2px,fill:none,stroke:blue; linkStyle 1 stroke-width:2px,fill:none,stroke:red; linkStyle 2 stroke-width:2px,fill:none,stroke:blue; linkStyle 3 stroke-width:2px,fill:none,stroke:blue; linkStyle 4 stroke-width:2px,fill:none,stroke:red; linkStyle 5 stroke-width:2px,fill:none,stroke:blue; linkStyle 6 stroke-width:2px,fill:none,stroke:red; click robotx_setup \"https://github.com/OUXT-Polaris/robotx_setup\" \"robotx_setup repository\" click dockerhub \"https://github.com/OUXT-Polaris/robotx_setup\" \"robotx_setup repository\" scenario_test workflow use ros-integration-test-action and run test case with navi-sim . ros-integration-test-action requires, base docker image, so when the pull request merged into master branch, base image is automatically update. Generated repos file in this workflow was uploaded as artifact and used in check_workflow_deployment workflow. document graph TB pull_request --send -->robotx_setup developer --manual hook-->robotx_setup daily_hook --> robotx_setup pull_request -- merged -->robotx_setup robotx_setup -- deploy --> github_pages linkStyle 0 stroke-width:2px,stroke:blue; linkStyle 1 stroke-width:2px,stroke:red; linkStyle 2 stroke-width:2px,stroke:red; linkStyle 3 stroke-width:2px,stroke:red; linkStyle 4 stroke-width:2px,stroke:red; click robotx_setup \"https://github.com/OUXT-Polaris/robotx_setup\" \"robotx_setup repository\" click github_pages \"https://ouxt-polaris.github.io/robotx_setup/\" \"github pages\" documentation workflow generate this documentation site and deploy it into github pages. deploy_workflow graph TB developer --manual hook-->robotx_setup daily_hook --> robotx_setup robotx_setup -- deploy workflow --> target_repository linkStyle 0 stroke-width:2px,stroke:blue; linkStyle 1 stroke-width:2px,stroke:blue; linkStyle 2 stroke-width:2px,stroke:blue; click robotx_setup \"https://github.com/OUXT-Polaris/robotx_setup\" \"robotx_setup repository\" deploy_workflow helps maintainers to deploy and maintain workflows for each pacakges. currently, over 25 packages are maintained by this workflow. check_workflow_deployment graph TB developer --manual hook-->robotx_setup daily_hook --> robotx_setup robotx_setup -- check workflow exists --> target_repository robotx_setup -- if workflow does not exist --> slack robotx_setup -- request repos file --> artifact artifact -- send repos file --> robotx_setup linkStyle 0 stroke-width:2px,stroke:blue; linkStyle 1 stroke-width:2px,stroke:blue; linkStyle 2 stroke-width:2px,stroke:blue; linkStyle 3 stroke-width:2px,stroke:blue; linkStyle 4 stroke-width:2px,stroke:blue; linkStyle 5 stroke-width:2px,stroke:blue; click robotx_setup \"https://github.com/OUXT-Polaris/robotx_setup\" \"robotx_setup repository\" check_workflow_deployment workflow checks github repositories in downloaded repos file and if the requred workflow does not exist in the target repository, notify this infomation to the team slack. Actions in each repositories \u2693\ufe0e In each repository, pull requests automatically runs build tests, unit tests and scenario test.","title":"Automation Pipeline"},{"location":"automation_pipeline/#automation-pipeline","text":"","title":"Automation Pipeline"},{"location":"automation_pipeline/#repository-architecture","text":"OUXT-Polaris softwares are separeated in many repositories in order to run continuous integration quickly. So, we developing integration pipeline for operating complex software stacks and deploy it.","title":"Repository Architecture"},{"location":"automation_pipeline/#integration-pipeline","text":"Integration pipeline is deployed at github actions in each repositories.","title":"Integration Pipeline"},{"location":"automation_pipeline/#actions-in-robotx_setup-package","text":"You can see acions tatus here .","title":"Actions in robotx_setup package"},{"location":"automation_pipeline/#actions-in-each-repositories","text":"In each repository, pull requests automatically runs build tests, unit tests and scenario test.","title":"Actions in each repositories"},{"location":"license/","text":"This tool provides under Apache 2.0 license. Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"LICENSE"},{"location":"report/","text":"Reports \u2693\ufe0e last update 2017-11-12 09:55:28+09:19 Support Status \u2693\ufe0e package galactic foxy dashing pcl_apps No dashing support. image_processing_utils scan_segmentation No dashing support. perception_bringup No dashing support. hermite_path_planner No dashing support. behavior_tree_action_builder No dashing support. robotx_behavior_tree No dashing support. color_names No dashing support. quaternion_operation No dashing support. data_buffer geometry_msgs_data_buffer No dashing support. wamv_description geographic_info geographic_conversion No dashing support. nmea_to_geopose No dashing support. odom_frame_publisher No dashing support. nmea_gps_driver No dashing support. embree_vendor No dashing support. navi_sim No dashing support. joy_to_twist No dashing support. message_synchronizer ouxt_behavior_descriptor_v1 No dashing support. miniv_control No dashing support. miniv_description No dashing support. dynamixel_hardware_interface No dashing support. tcp_sender usv_controller No dashing support. librealsense_vendor sol_vendor lua_vendor playstation_controller_drivers No dashing support. realsense_hardware_interface No galactic support. No dashing support. robotx_ekf No dashing support. rospy2 No dashing support. rosboard No dashing support. Issues/Pull Requests \u2693\ufe0e package issue pcl_apps add project component perception_bringup enable launch pointcloud projection robotx_behavior_tree example decorator robotx_behavior_tree example control robotx_behavior_tree example condition color_names Update ROS2-Dashing.yaml quaternion_operation [Bot] Update workflow wamv_description [Bot] Update workflow embree_vendor Problem with bloom releases navi_sim update CI workflow for galactic joy_to_twist [Bot] Update workflow miniv_control update CI workflow for galactic miniv_description update CI workflow for galactic dynamixel_hardware_interface Add XM430-W350 tcp_sender [Bot] Update workflow usv_controller update CI workflow for galactic librealsense_vendor update CI workflow for galactic lua_vendor [Bot] Update workflow robotx_setup add integration test workflow robotx_setup errors in ansible_user robotx_setup ssh\u8d8a\u3057\u3067docker\u5185\u306bansible\u3067\u74b0\u5883\u69cb\u7bc9\u3057\u3066\u308b\u3068\u63a5\u7d9a\u304c\u5207\u308c\u308b robotx_setup lack of idempotence","title":"Packages/BuildStatus"},{"location":"report/#reports","text":"last update 2017-11-12 09:55:28+09:19","title":"Reports"},{"location":"report/#support-status","text":"package galactic foxy dashing pcl_apps No dashing support. image_processing_utils scan_segmentation No dashing support. perception_bringup No dashing support. hermite_path_planner No dashing support. behavior_tree_action_builder No dashing support. robotx_behavior_tree No dashing support. color_names No dashing support. quaternion_operation No dashing support. data_buffer geometry_msgs_data_buffer No dashing support. wamv_description geographic_info geographic_conversion No dashing support. nmea_to_geopose No dashing support. odom_frame_publisher No dashing support. nmea_gps_driver No dashing support. embree_vendor No dashing support. navi_sim No dashing support. joy_to_twist No dashing support. message_synchronizer ouxt_behavior_descriptor_v1 No dashing support. miniv_control No dashing support. miniv_description No dashing support. dynamixel_hardware_interface No dashing support. tcp_sender usv_controller No dashing support. librealsense_vendor sol_vendor lua_vendor playstation_controller_drivers No dashing support. realsense_hardware_interface No galactic support. No dashing support. robotx_ekf No dashing support. rospy2 No dashing support. rosboard No dashing support.","title":"Support Status"},{"location":"report/#issuespull-requests","text":"package issue pcl_apps add project component perception_bringup enable launch pointcloud projection robotx_behavior_tree example decorator robotx_behavior_tree example control robotx_behavior_tree example condition color_names Update ROS2-Dashing.yaml quaternion_operation [Bot] Update workflow wamv_description [Bot] Update workflow embree_vendor Problem with bloom releases navi_sim update CI workflow for galactic joy_to_twist [Bot] Update workflow miniv_control update CI workflow for galactic miniv_description update CI workflow for galactic dynamixel_hardware_interface Add XM430-W350 tcp_sender [Bot] Update workflow usv_controller update CI workflow for galactic librealsense_vendor update CI workflow for galactic lua_vendor [Bot] Update workflow robotx_setup add integration test workflow robotx_setup errors in ansible_user robotx_setup ssh\u8d8a\u3057\u3067docker\u5185\u306bansible\u3067\u74b0\u5883\u69cb\u7bc9\u3057\u3066\u308b\u3068\u63a5\u7d9a\u304c\u5207\u308c\u308b robotx_setup lack of idempotence","title":"Issues/Pull Requests"},{"location":"tutorials/build_document/","text":"Build Document \u2693\ufe0e Documentation is robotx_setup is automatically deployed here . But if you want to build documentation manually, please check here. only first time \u2693\ufe0e sudo apt install ansible install ansible in order to run playbook. mkdocs and other dependency was resolved by this playbook. build document \u2693\ufe0e cd (directory of robotx_setup) ansible-playbook -i ansible/hosts/localhost.ini ansible/build_document.yml --connection local --ask-become-pass cd docs mkdocs serve","title":"Build Document"},{"location":"tutorials/build_document/#build-document","text":"Documentation is robotx_setup is automatically deployed here . But if you want to build documentation manually, please check here.","title":"Build Document"},{"location":"tutorials/build_document/#only-first-time","text":"sudo apt install ansible install ansible in order to run playbook. mkdocs and other dependency was resolved by this playbook.","title":"only first time"},{"location":"tutorials/build_document/#build-document_1","text":"cd (directory of robotx_setup) ansible-playbook -i ansible/hosts/localhost.ini ansible/build_document.yml --connection local --ask-become-pass cd docs mkdocs serve","title":"build document"},{"location":"tutorials/build_instraction/","text":"Build Instractions \u2693\ufe0e If you want to know about supported platfroms, please see also this page . build this documentation locally \u2693\ufe0e ansible-playbook -i ansible/hosts/localhost.ini ansible/build_document.yml --connection local --ask-become-pass install in local host (full package) \u2693\ufe0e first time sudo apt install ansible ansible-playbook -i ansible/hosts/localhost.ini ansible/setup_full.yml --connection local --ask-become-pass not first time ansible-playbook -i ansible/hosts/localhost.ini ansible/update_full.yml --connection local --ask-become-pass install to test docker image \u2693\ufe0e cd docker/build_test sh run.sh cd ../ ansible-playbook -i ansible/hosts/docker.ini ansible/setup_docker.yml","title":"Build Instractions"},{"location":"tutorials/build_instraction/#build-instractions","text":"If you want to know about supported platfroms, please see also this page .","title":"Build Instractions"},{"location":"tutorials/build_instraction/#build-this-documentation-locally","text":"ansible-playbook -i ansible/hosts/localhost.ini ansible/build_document.yml --connection local --ask-become-pass","title":"build this documentation locally"},{"location":"tutorials/build_instraction/#install-in-local-host-full-package","text":"first time sudo apt install ansible ansible-playbook -i ansible/hosts/localhost.ini ansible/setup_full.yml --connection local --ask-become-pass not first time ansible-playbook -i ansible/hosts/localhost.ini ansible/update_full.yml --connection local --ask-become-pass","title":"install in local host (full package)"},{"location":"tutorials/build_instraction/#install-to-test-docker-image","text":"cd docker/build_test sh run.sh cd ../ ansible-playbook -i ansible/hosts/docker.ini ansible/setup_docker.yml","title":"install to test docker image"},{"location":"tutorials/navigation_demo/","text":"Navigation Demo \u2693\ufe0e How to run demo \u2693\ufe0e build packages \u2693\ufe0e Please see also, this page . run simulator and planner \u2693\ufe0e ros2 launch navi_sim with_planner.launch.py set goal \u2693\ufe0e use 2d goal pose tool in rviz. then, the navigation starts. spawn obstacle \u2693\ufe0e use clicked point tool in rviz then, replan waypoints.","title":"Navigation Demo"},{"location":"tutorials/navigation_demo/#navigation-demo","text":"","title":"Navigation Demo"},{"location":"tutorials/navigation_demo/#how-to-run-demo","text":"","title":"How to run demo"},{"location":"tutorials/navigation_demo/#build-packages","text":"Please see also, this page .","title":"build packages"},{"location":"tutorials/navigation_demo/#run-simulator-and-planner","text":"ros2 launch navi_sim with_planner.launch.py","title":"run simulator and planner"},{"location":"tutorials/navigation_demo/#set-goal","text":"use 2d goal pose tool in rviz. then, the navigation starts.","title":"set goal"},{"location":"tutorials/navigation_demo/#spawn-obstacle","text":"use clicked point tool in rviz then, replan waypoints.","title":"spawn obstacle"},{"location":"tutorials/supported_platforms/","text":"Supported Platform \u2693\ufe0e ubuntu 20.04 \u2693\ufe0e If your ubuntu version is older than 20.04, you can use docker environment. ansible task install ROS2 foxy, so you do not necessary to setup ROS2 before you run ansible-script, you have to install ansible via apt sudo apt install ansible","title":"Supported Platform"},{"location":"tutorials/supported_platforms/#supported-platform","text":"","title":"Supported Platform"},{"location":"tutorials/supported_platforms/#ubuntu-2004","text":"If your ubuntu version is older than 20.04, you can use docker environment. ansible task install ROS2 foxy, so you do not necessary to setup ROS2 before you run ansible-script, you have to install ansible via apt sudo apt install ansible","title":"ubuntu 20.04"}]}